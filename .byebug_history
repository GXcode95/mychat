c
is_private
self
c
@room.users_rooms.size
@room.users_rooms
c
@room
c
@room
c
    @room = Room.new(name: 'pv', is_private: true)
    @room.users_rooms.build(users: [@user, current_user])
    @room.users_rooms.build([user: @user,user: current_user])
    @room.users_rooms.build([user: @user,user: current_user)
    @room = Room.new(name: 'pv', is_private: true)
@room.valid?
    @room.users_rooms.build([{user: @user},{user: current_user}])
exit
@room.valid?
@room.is_private = true
@room
@room.users_rooms.build([{status: :accepted, role: :admin, user: @user},{status: :accepted, role: :admin, user: current_user}])
current_user.id
@room = Room.new(name: 'pv')
@room.valid?
@room.users_rooms.build(status: :accepted, role: :admin, user: @user)
@user = User.find(params[:user_ids].first)
@room.users_rooms.build(status: :accepted, role: :admin, user: @user)
@user = params[:user_ids].first
@room = Room.new(name: 'pv')
User.where(id: params[:user_ids]).size
User.where(id: params[:user_ids])
room.valid?
room.users_rooms.size
room.users_rooms.new(user_id: params[:user_ids].last, status: :accepted, role: :admin)
room.users_rooms.first.status = :accepted
room.users_rooms.first.role = :admin
room.users_rooms.first
room.users_rooms.new(user_id: params[:user_ids].first)
room.is_private = true
room.is_private: true
room.name = "pv"
room = Room.new
params
exit
params[:room][:users_rooms_attributes].size
params[:room][:users_rooms_attributes];wize
params[:room][:users_rooms_attributes]
params[:room]
params[:room][:users_room]
params[:room][:users_rooms]
@room.users_rooms
@room.user_rooms
@room
users_rooms_params.first
ud
user_rooms_params
@room.errors.messages
@room.update(users_rooms_params)
@room.save
@room = Room.new(name: params[:room][:name])
Room.last.destroy
@room.save
@room = Room.new(name: params[:room][:name])
@room.new(name: params[:room][:name])
exit
@room.update(users_rooms_params)
users_rooms_params
@room.save
@room = Room.new(name: params[:room][:name])
@room.new(name: params[:room][:name])
exit
@room.users_rooms.new(urs.first)
@room.update(users_rooms: urs)
@room = Room.new(name: params[:room][:name])
Room.new(id: params[:room][:name])
Room.new(params[:room][:name])
urs = room_params[:users_rooms].to_a.map(&:to_h)
room_params[:users_rooms].to_a.map(&:to_h)
room_params[:users_rooms].to_a.first.to_h
room_params[:users_rooms].to_a.first
room_params[:users_rooms].to_a
room_params[:users_rooms].to_h
room_params[:users_rooms]
Room.new(room_params)
room_params[:users_rooms]
room_params[:name]
room_params[:id]
room_params[:users_rooms]
room_params["users_rooms"]
room_params
c!
room_params
exit
params['room']['users_rooms']
params['room']
params
c
@user_room
params[:users_room]
params
c
params[:id]
params[:users_room]
params
c
@room.messages
@room
c
@room.messages
@room
c
@room
@room.messages
@room
c
current_user
c
current_user
c
current_user
c
current_user
@current_user
c
current_user
c
current_user
c
current_user
c
current_user
c
current_user
c
params[:room_id]
params
c
params
c
msg
c
message.errors.full_messages
message.errors.messages
message.errors
message
c
@message
@message.errors.full_messages
@message.valid?
c
plop = Message.new(message_params)
c
plop.valid?
plop.author = current_user
plop = Message.new(message_params)
c
plop = Message.new(message_params)
params
c
params
